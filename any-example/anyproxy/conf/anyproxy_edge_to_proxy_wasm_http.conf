#http(http1.0 http1.1 http2.0)->http, http->(http1.1,https1.1)
#curl http://www.example.cn:21201 -k -v

#https(https1.0 https1.1 https2.0)->https, http->(http1.1,https1.1)
#curl https://www.example.cn:21202 -k -v
    server {
        stream_cache_size  usize = 131072;
        is_open_sendfile linux_bool= true;
        stream_nopush bool = true;
        is_upload_open_stream_cache bool = true;
        is_download_open_stream_cache bool = true;
        download_tmp_file_size  u64= 10240000 ;#default 0  10240000
        upload_tmp_file_size  u64= 10240000; #default 0

        download_tmp_file_reopen_size u64= 1024000000 ;#default 0  10240000
        upload_tmp_file_reopen_size u64= 1024000000; #default 0

        domain str = "www.example.cn";
        net_server_http raw = r```
        ```r;

         domain_listen_tcp raw = r```
            address = "0.0.0.0:21201"
        ```r;
        domain_listen_ssl raw = r```
            address = "0.0.0.0:21202"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        domain_listen_quic raw = r```
            address = "0.0.0.0:21202"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;

        expires usize = 0;

        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/access"
            ```r;

            wasm_access raw = r```
                [[wasm]]
                wasm_path = "../../wasm/http-hello/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = '''
                    name = "wasm_access_test"
                    '''
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }



        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/http_in_headers"
            ```r;

            wasm_http_in_headers raw = r```
                [[wasm]]
                wasm_path = "../../wasm/http-in-headers/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = ""
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }




        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/filter_headers_pre"
            ```r;

            wasm_http_filter_headers_pre raw = r```
                [[wasm]]
                wasm_path = "../../wasm/http-filter-headers-pre/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = ""
                [[wasm]]
                wasm_path = "../../wasm/http-filter-headers-pre-expire/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config =  '''
                    expires = 11
                    '''
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }



        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/filter_headers"
            ```r;

            wasm_http_filter_headers raw = r```
                [[wasm]]
                wasm_path = "../../wasm/http-filter-headers/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = ""
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }


        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/access_log"
            ```r;

            wasm_access_log raw = r```
                [[wasm]]
                wasm_path = "../../wasm/http-hello/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = '''
                    name = "wasm_access_log_test"
                    '''
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }


        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/serverless"
            ```r;

            wasm_serverless raw = r```
                [[wasm]]
                wasm_path = "../../wasm/serverless/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = '''
                    name = "wasm_serverless_test"
                    '''
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }


        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/serverless_timeout"
            ```r;

            wasm_serverless raw = r```
                [[wasm]]
                wasm_path = "../../wasm/serverless-timeout/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = '''
                    name = "wasm_serverless_timeout_test"
                    '''
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }

        #curl http://www.example.cn:21201/wasm/http_serverless_demo -k -v
        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/http_serverless_demo"
            ```r;

            wasm_serverless raw = r```
                [[wasm]]
                wasm_path = "../../wasm/http-demo/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = '''
                    name = "wasm_http_serverless_demo_test"
                    '''
            ```r;



            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 3;
            proxy_pass_upstream str = "upstream8";
        }


        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/wasm/http_serverless"
            ```r;

            wasm_serverless raw = r```
                [[wasm]]
                wasm_path = "../../wasm/http-serverless/target/wasm32-wasi/release/wasm_server.wasm"
                wasm_main_config = '''
                    name = "wasm_http_serverless_test"
                    '''
            ```r;

            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }


        local {
            rule raw = r```
                [[rule]]
                data= ""
                filter = "$$(.*)"
            ```r;
            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 3;
            proxy_pass_upstream str = "upstream8";
        }
    }