#http(http1.0 http1.1 http2.0)->http, http->(http1.1,https1.1)
#curl http://www.example.cn:20201 -k -v

#https(https1.0 https1.1 https2.0)->https, http->(http1.1,https1.1)
#curl https://www.example.cn:20202 -k -v
    server {
        stream_cache_size  usize = 131072;
        is_open_sendfile linux_bool= true;
        stream_nopush bool = true;
        is_upload_open_stream_cache bool = true;
        is_download_open_stream_cache bool = true;
        download_tmp_file_size  u64= 10240000 ;#default 0  10240000
        upload_tmp_file_size  u64= 10240000; #default 0

        download_tmp_file_reopen_size u64= 1024000000 ;#default 0  10240000
        upload_tmp_file_reopen_size u64= 1024000000; #default 0

        domain str = "www.example.cn";
        net_server_http raw = r```
        ```r;

         domain_listen_tcp raw = r```
            address = "0.0.0.0:20201"
        ```r;
        domain_listen_ssl raw = r```
            address = "0.0.0.0:20202"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        domain_listen_quic raw = r```
            address = "0.0.0.0:20202"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;

        expires usize = 0;
        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/test_nil"
            ```r;
            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream_nil";
        }

        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/purge"
            ```r;
            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            net_server_http_purge raw = r```
            ```r;

            proxy_cache_purge bool = true;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }

        local {
            rule raw = r```
                [[rule]]
                data= "${http_request_url}"
                filter = "http"
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/test"
            ```r;
            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream8";
        }

        local {
            rule raw = r```
                [[rule]]
                data= "${http_request_url}"
                filter = "https"
            ```r;
            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 2;
            proxy_pass_upstream str = "upstream8";
        }


        local {
            rule raw = r```
                [[rule]]
                data= ""
                filter = "$$(.*)"
            ```r;
            net_server_http_proxy raw = r```
                #version: http1.1 http2.0 auto
                proxy_pass = {version = "auto"}
            ```r;

            expires usize = 3;
            proxy_pass_upstream str = "upstream8";
        }
    }


#http(http1.0 http1.1 http2.0)->http, http->(http2.0,https2.0)
#curl http://www.example.cn:20301 -k -v

#https(https1.0 https1.1 https2.0)->https, http->(http2.0,https2.0)
#curl https://www.example.cn:20302 -k -v
    server {
        domain str = "www.example.cn";
        net_server_http raw = r```
        ```r;
         domain_listen_tcp raw = r```
            address = "0.0.0.0:20301"
        ```r;
        domain_listen_ssl raw = r```
            address = "0.0.0.0:20302"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        domain_listen_quic raw = r```
            address = "0.0.0.0:20302"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;

        local {
            rule raw = r```
                [[rule]]
                 data= "${http_request_uri}"
                 filter = "/test_nil"
            ```r;
        net_server_http_proxy raw = r```
            #version: http1.1 http2.0 auto
            proxy_pass = {version = "http2.0"}
        ```r;

            expires usize = 11;
            proxy_pass_upstream str = "upstream_nil";
        }

        local {
            rule raw = r```
                [[rule]]
                data= ""
                filter = "$$(.*)"
            ```r;
        net_server_http_proxy raw = r```
            #version: http1.1 http2.0 auto
            proxy_pass = {version = "http2.0"}
        ```r;
            expires usize = 4;
            proxy_pass_upstream str = "upstream9";
        }
    }



#upstream9
#http(http1.0 http1.1 http2.0)->http, http->(http2.0,https2.0)
#curl http://www.example.cn:20303 -k -v

#https(https1.0 https1.1 https2.0)->https, http->(http2.0,https2.0)
#curl https://www.example.cn:20304 -k -v
    server {
        domain str = "www.example.cn";
        net_server_http raw = r```
        ```r;
         domain_listen_tcp raw = r```
            address = "0.0.0.0:20303"
        ```r;
        domain_listen_ssl raw = r```
            address = "0.0.0.0:20304"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        domain_listen_quic raw = r```
            address = "0.0.0.0:20303"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        local {
            rule raw = r```
                [[rule]]
                data= ""
                filter = "$$(.*)"
            ```r;
        net_server_http_proxy raw = r```
            #version: http1.1 http2.0 auto
            #proxy_pass = {version = "http2.0"}
            proxy_pass = {version = "auto"}
        ```r;
            proxy_pass_upstream str = "upstream_http_http_chunked";
        }
    }


#curl -H "ups_ip: 127.0.0.1" http://www.example.cn:20305 -k -v
    server {
        domain str = "www.example.cn";
        net_server_http raw = r```
        ```r;
         domain_listen_tcp raw = r```
            address = "0.0.0.0:20305"
        ```r;
        domain_listen_ssl raw = r```
            address = "0.0.0.0:20306"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        domain_listen_quic raw = r```
            address = "0.0.0.0:20305"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        local {
            rule raw = r```
                [[rule]]
                data= ""
                filter = "$$(.*)"
            ```r;
        net_server_http_proxy raw = r```
            #version: http1.1 http2.0 auto
            proxy_pass = {version = "http2.0"}
        ```r;

             proxy_pass_tcp raw = r```
                address = "${http_request_ups_ip}:19092"
            ```r;

        }
    }




#upstream9
#http(http1.0 http1.1 http2.0)->http, http->(http2.0,https2.0)
#curl http://www.example.cn:20307 -k -v

#https(https1.0 https1.1 https2.0)->https, http->(http2.0,https2.0)
#curl https://www.example.cn:20308 -k -v
    server {
        domain str = "www.example.cn";
        net_server_http raw = r```
        ```r;
         domain_listen_tcp raw = r```
            address = "0.0.0.0:20307"
        ```r;
        domain_listen_ssl raw = r```
            address = "0.0.0.0:20308"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        domain_listen_quic raw = r```
            address = "0.0.0.0:20307"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        ```r;
        local {
            rule raw = r```
                [[rule]]
                data= ""
                filter = "$$(.*)"
            ```r;
        net_server_http_proxy raw = r```
            #version: http1.1 http2.0 auto
            proxy_pass = {version = "http2.0"}
        ```r;
            proxy_pass_upstream str = "upstream_http_http_chunked";
        }
    }


r###

curl  http://www.example.cn:20303 -k -v
curl  https://www.example.cn:20304 -k -v
curl   --http1.1  https://www.example.cn:20304 -k -v


curl  http://www.upstream.cn:19090 -k -v
curl  https://www.upstream.cn:19091 -k -v
curl   --http1.1 https://www.upstream.cn:19091 -k -v



curl --http2-prior-knowledge http://www.upstream.cn:19092 -k -v
curl --http2-prior-knowledge https://www.upstream.cn:19093 -k -v
curl --http2-prior-knowledge https://www.upstream.cn:19093/1.txt -k -v
curl -v --http2 https://www.upstream.cn:19093/1.txt -k -v


./ab -c abhttp_origin_2.conf -t 10 -o 10000000 -r 0 -s "0-0" -k 0 -ck 1 -key "" -rf 1 -p 0 -lp 0 -h302 0 -single 1 -m 1 -timeout 0 -limit 0 -cs "100-2000" -h2c -ee 10

./ab -c abhttp2_origin.conf -t 10 -o 10000000 -r 0 -s "0-0" -k 0 -ck 1 -key "" -rf 1 -p 0 -lp 0 -h302 0 -single 1 -m 1 -timeout 0 -limit 0 -cs "100-2000" -h2c -ee 10


./ab -c abhttps_origin.conf -t 10 -o 10000000 -r 0 -s "0-0" -k 0 -ck 1 -key "" -rf 1 -p 0 -lp 0 -h302 0 -single 1 -m 1 -timeout 0 -limit 0 -cs "100-2000" -ee 10

./ab -c abhttps2_origin.conf -t 10 -o 10000000 -r 0 -s "0-0" -k 0 -ck 1 -key "" -rf 1 -p 0 -lp 0 -h302 0 -single 1 -m 1 -timeout 0 -limit 0 -cs "100-2000" -h2 -ee 10

curl http://www.example.cn:20201/1.txt -v
curl -H "purge:purge" http://www.example.cn:20201/purge/1.txt -v
###r