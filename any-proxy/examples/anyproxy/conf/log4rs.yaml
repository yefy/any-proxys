# log4rs.yaml
# 检查配置文件变动的时间间隔
refresh_rate: 10 seconds
# appender 负责将日志收集到控制台或文件, 可配置多个
appenders:
  stdout:
    kind: console
    encoder:
      kind: pattern
      pattern: "{d(%Y-%m-%d %H:%M:%S)} {h({l:<6})} {I:<7} {f}:{L} {m}{n}"
  file:
    kind: file
    path: "logs/anyproxy.log"
    encoder:
      kind: pattern
      pattern: "{d(%Y-%m-%d %H:%M:%S)} {h({l:<6})} {I:<7} {f}:{L} {m}{n}"
# 对全局 log 进行配置
root:
  level: info
  appenders:
    - stdout
    - file

loggers:
  main:
    level: info
    additive: true
  ext:
    level: trace
    additive: false
  ext2:
    level: trace
    additive: false
  ext3:
    level: trace
    additive: false
  is_ups:
    level: trace
    additive: false
  ms:
    level: debug
    additive: false
  wasm:
    level: info
    additive: true
#"{d(%Y-%m-%d %H:%M:%S)} {h({l})} {T}:{I} {f}:{L} {M}: {m}{n}"
#"{d(%Y-%m-%d %H:%M:%S)} {h({l:<6})} {I:<7} {f}:{L} {m}{n}"
# error warn info  debug  trace

#pub enum Level {
  #Error = 1,  错误信息
  #Warn,       警告信息
  #Info,       启动提示信息
  #Debug,      启动非常多的日志
  #Trace,			其它库会打印很多信息， 基本不要用
#}

#错误信息     log::Error
#警告信息      log::Warn
#启动提示信息  log::Info

#错误信息，可以被忽略的错误   log::error!(target: "ext", "ext error");
#比较少的信息，只有少的情况才会触发的日志， 例如：文件过期了  log::info!(target: "ext", "ext info");
#比较少的信息，循环打印， 例如：重要基本提示信息        log::debug!(target: "ext", "ext debug");
#流程信息，循环打印，信息量少  log::trace!(target: "ext", "ext trace");

#流程信息，循环打印，信息量大  log::debug!(target: "ext2", "ext2 debug");
#预留  log::trace!(target: "ext2", "ext2 trace");

#流程信息，循环打印，详细日志  例如：http请求 响应信息  log::debug!(target: "ext3", "ext3 debug");
#调试循环信息，量非常大  log::trace!(target: "ext3", "ext3 trace");



#log::debug!(target: "main", "main debug");
#log::trace!(target: "main", "main trace");

#log::error!(target: "ext", "ext error");
#log::warn!(target: "ext", "ext warn");
#log::info!(target: "ext", "ext info");
#log::debug!(target: "ext", "ext debug");
#log::trace!(target: "ext", "ext trace");

#log::debug!(target: "ext2", "ext2 debug");
#log::trace!(target: "ext2", "ext2 trace");

#log::debug!(target: "ext3", "ext3 debug");
#log::trace!(target: "ext3", "ext3 trace");

#log::error!(target: "wasm", "ext error");
#log::warn!(target: "wasm", "ext warn");
#log::info!(target: "wasm", "ext info");
#log::debug!(target: "wasm", "ext debug");
#log::trace!(target: "wasm", "ext trace");