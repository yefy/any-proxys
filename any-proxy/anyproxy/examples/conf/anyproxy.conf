[[tcp]]
    #配置名字，可以根据名字来引用配置
    tcp_name = "tcp_config_1" #default tcp_config_1
    #发送buffer，为0不设置
    tcp_send_buffer = 0   #default 0  unset
    #接收buffer，为0不设置
    tcp_recv_buffer = 0 #default 0  unset
    #是否不延迟
    tcp_nodelay = true #default true
    #发送超时时间，为0不超时
    tcp_send_timeout = 60  #default 60
    #接收超时时间，为0不超时
    tcp_recv_timeout = 60  #default 60
    #connect超时时间，为0不超时
    tcp_connect_timeout = 60  #default 10

[[quic]]
    #配置名字，可以根据名字来引用配置
    quic_name = "quic_config_1" #default quic_config_1
    #发送超时时间，为0不超时
    quic_send_timeout = 60  #default 60
    #接收超时时间，为0不超时
    quic_recv_timeout = 60  #default 60
    #connect超时时间，为0不超时
    quic_connect_timeout = 60  #default 10
    #绑定端口,支持配置多端口"10001-10009,10010,10011,10012,10100-10110"
    quic_upstream_ports = "" #default 不绑定固定端口， 使用的时候随机获取端口

    #quinn提供的配置值
    quic_default = true #default true   如果是true下面配置不生效
    quic_upstream_streams = 100 #default 100
    quic_send_window = 8 #default8
    quic_rtt = 100 #default 100
    quic_max_stream_bandwidth = 12500 #default 12500
    quic_enable_keylog = false #default false
    quic_protocols = "ALPN" #default "ALPN"
    quic_datagram_send_buffer_size = 1048576 #default 1024 * 1024
    quic_recv_buffer_size = 10485760 #default 10485760
    quic_send_buffer_size = 10485760 #default 10485760

[common]
    #绑定cpu
    cpu_affinity = false #default true
    #linux下支持开启reuseport
    reuseport = true    #linux default true  windows default false
    #线程个数，为0使用cpu数的线程
    worker_threads = 10  #default 0 (cpu num)
    #最大链接
    max_connections = 102400  #default 0   unlimit
    #reload和reinit等待流时间，时间到强制退出
    shutdown_timeout = 30    #default 30
    #是否打印配置文件数据
    debug_is_print_config = false  #是否打印配置文件 default false
    #最大打开文件
    max_open_file_limit = 1024000  #default unlimit
    #linux memlock_rlimit
    memlock_rlimit ={curr = 102400, max = 102400}
    #打开ebpf编译日志
    debug_is_open_ebpf_log = false #default false
    worker_threads_blocking = 10

[stream]
    #流读取缓冲区大小
    stream_cache_size = 131072  #default 131072
    #调试用 获取每个阶段时间
    debug_is_open_stream_work_times = true   #default false
    #调试用 定时打印access_log，为0不生效
    debug_print_access_log_time = 0   #default 0
    #调试用 定时打印流量
    debug_print_stream_flow_time = 0  #default 0
    is_tmp_file_io_page = true
    stream_so_singer_time = 300  #default 300ms

[rate]
    #下载在这个范围内不限速，为0不生效
    download_limit_rate_after =0 #default 0   1024000
    #限速多少，为0不生效
    download_limit_rate       =0 #default 0 102400 300000
    #上传在这个范围内不限速，为0不生效
    upload_limit_rate_after =0 #default 0  1024000
    #限速多少，为0不生效
    upload_limit_rate       =0 #default 0 102400 300000

[tmp_file]
    #下载临时文件最大值，为0不生效
    download_tmp_file_size = 10240000 #default 0  10240000
    #上传临时文件最大值，为0不生效
    upload_tmp_file_size = 10240000 #default 0


[tunnel2]
    #开启多少线程给tunnel2
    tunnel2_worker_thread = 1  #default 0 (cpu num)
    #每个回源ip使用最大连接数
    tunnel2_max_connect = 1  #default 100

[fast_conf]
    #是否开启ebpf
    is_open_ebpf = false
    #是否开启带特定key值的日志
    debug_is_open_print = false
    #linux 是否打开零复制sendfile
    is_open_sendfile = false
#include ./upstream.conf {
[_upstream]
    #include ../../proxy/conf/upstream_server.conf {
    [[_server]]
        #配置名字，可以根据名字来引用配置
        name = "upstream_config_proxy1"
        #负载均衡 weight round_robin random ip_hash ip_hash_active fair
        dispatch = {type="round_robin"}  #default round_robin
        #配置回源信息
        [[proxy_pass]]
            type = "tcp"
            address = "127.0.0.1:19090"
        [[proxy_pass]]
            type = "ssl"
            ssl_domain= "www.example.cn"
            address = "127.0.0.1:19091"
    #include ../../proxy/conf/upstream_server.conf }



    [[_server]]
        #配置名字，可以根据名字来引用配置
        name = "upstream_config_port_work1"
        #负载均衡 weight round_robin random ip_hash ip_hash_active fair
        dispatch = {type="round_robin"}  #default round_robin
        #配置回源信息
        [[proxy_pass]]
            type = "tcp"
            address = "www.upstream.cn:11131"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
#        [[proxy_pass]]
#            type = "ssl"
#            ssl_domain= "www.example.cn"
#            address = "www.upstream.cn:11132"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
#            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "quic"
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11131"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true


        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "tcp"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            address = "www.upstream.cn:11131"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
#        [[proxy_pass]]
#            type = "tunnel"
#            tunnel_type = "ssl"
#            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
#            ssl_domain= "www.example.cn"
#            address = "www.upstream.cn:11132"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
#            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "quic"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11131"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true


        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "tcp"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            address = "www.upstream.cn:11131"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
#        [[proxy_pass]]
#            type = "tunnel"
#            tunnel_type = "ssl"
#            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
#            ssl_domain= "www.example.cn"
#            address = "www.upstream.cn:11132"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
#            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "quic"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11131"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true





    [[_server]]
        #配置名字，可以根据名字来引用配置
        name = "upstream_config_domain_work1"
        #负载均衡 weight round_robin random ip_hash ip_hash_active fair
        dispatch = {type="round_robin"}  #default round_robin
        #配置回源信息
        [[proxy_pass]]
            type = "tcp"
            address = "www.upstream.cn:11151"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "ssl"
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11152"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "quic"
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11151"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true


        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "tcp"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            address = "www.upstream.cn:11151"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "ssl"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11152"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "quic"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11151"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true


        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "tcp"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            address = "www.upstream.cn:11151"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "ssl"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11152"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "quic"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11151"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true



    [[_server]]
        #配置名字，可以根据名字来引用配置
        name = "upstream_config_domain_work2"
        #负载均衡 weight round_robin random ip_hash ip_hash_active fair
        dispatch = {type="round_robin"}  #default round_robin
        #配置回源信息
        [[proxy_pass]]
            type = "tcp"
            address = "www.upstream.cn:11153"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "ssl"
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11154"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "quic"
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11153"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true


        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "tcp"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            address = "www.upstream.cn:11153"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "ssl"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11154"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "quic"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11153"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true


        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "tcp"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            address = "www.upstream.cn:11153"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "ssl"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11154"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true
        [[proxy_pass]]
            type = "tunnel"
            tunnel_type = "quic"
            tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
            ssl_domain= "www.example.cn"
            address = "www.upstream.cn:11153"
            #heartbeat = {interval = 10, timeout = 10, fail = 3}
            #dynamic_domain = {interval = 10}
            is_proxy_protocol_hello = true


    [[_server]]
        name = "upstream_config_2"
        dispatch = {type="weight"}
        proxy_pass = [
            {type = "tcp", address = "www.upstream.cn:11131", is_proxy_protocol_hello = true, weight = 5},
        ]



     [[_server]]
         #配置名字，可以根据名字来引用配置
         name = "upstream_config_domain_http_work1"
         #负载均衡 weight round_robin random ip_hash ip_hash_active fair
         dispatch = {type="round_robin"}  #default round_robin
         #配置回源信息

         [[proxy_pass]]
             type = "tcp"
             address = "www.upstream.cn:11161"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "ssl"
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11162"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "quic"
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11161"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true

         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "tcp"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
             address = "www.upstream.cn:11161"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "ssl"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11162"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true


         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "quic"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11161"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true


         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "tcp"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
             address = "www.upstream.cn:11161"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "ssl"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11162"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "quic"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11161"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true


     [[_server]]
         #配置名字，可以根据名字来引用配置
         name = "upstream_config_domain_http_work2"
         #负载均衡 weight round_robin random ip_hash ip_hash_active fair
         dispatch = {type="round_robin"}  #default round_robin
         #配置回源信息
         [[proxy_pass]]
             type = "tcp"
             address = "www.upstream.cn:11163"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "ssl"
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11164"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "quic"
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11163"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true



         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "tcp"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
             address = "www.upstream.cn:11163"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "ssl"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11164"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "quic"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11163"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true


         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "tcp"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
             address = "www.upstream.cn:11163"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "ssl"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11164"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true
         [[proxy_pass]]
             type = "tunnel"
             tunnel_type = "quic"
             tunnel = { max_stream_size = 5, min_stream_cache_size = 0, channel_size = 64}
             ssl_domain= "www.example.cn"
             address = "www.upstream.cn:11163"
             #heartbeat = {interval = 10, timeout = 10, fail = 3}
             #dynamic_domain = {interval = 10}
             is_proxy_protocol_hello = true


#include ./upstream.conf }

#include ./port.conf {
[_port]
    #如果没有配置就继承父类的配置
    [[access]]
        #default true
        access_log = true
        #default "./logs/access.log"
        access_log_file = "./logs/access.log"
        #default
        access_format = "[${local_time}] ${total_read_size} ${total_write_size} ${write_max_block_time_ms} ${buffer_cache} ${upstream_dispatch} ${is_proxy_protocol_hello} ${is_open_ebpf} ${local_protocol} -> ${upstream_protocol} ${request_id} ${client_addr} ${remote_addr} ${local_addr} ${upstream_addr} ${domain} ${upstream_host} ${status} ${status_str} ${is_timeout_exit} ${session_time} ${upstream_connect_time} ${client_bytes_received} ${upstream_bytes_sent} ${upstream_bytes_received} ${client_bytes_sent} ${upstream_curr_stream_size} ${upstream_max_stream_size} ${upstream_min_stream_cache_size} [${stream_work_times}]"
        #default false
        access_log_stdout = false

    #include ./port_server.conf {
    #include ../../proxy/conf/port_server.conf {
    [[_server]]
        #计费域名
        domain = "www.example.cn"
        #是否发送协议头 default false
        is_proxy_protocol_hello = false
        #回源 回源类型 地址
        proxy_pass = {type = "upstream", ups_name="upstream_config_proxy1"}
        #proxy_pass = {type = "tcp", address="127.0.0.1:19090"}
        #proxy_pass = {type = "ssl", ssl_domain= "www.example.cn", address="127.0.0.1:19091"}
        [[listen]]
            #监听类型
            type = "tcp"
            #监听地址
            address = "0.0.0.0:11131"
        [[listen]]
            #监听类型
            type = "ssl"
            #监听地址
            address = "0.0.0.0:11132"
            #quic协议需要证书和证书对应的域名
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem", ssl_domain = "www.example.cn"}
        [[listen]]
            #监听类型
            type = "quic"
            #监听地址
            address = "0.0.0.0:11131"
            #quic协议需要证书和证书对应的域名
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem", ssl_domain = "www.example.cn"}
    
    #include ../../proxy/conf/port_server.conf }

    
    [[_server]]
        domain = "www.example.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_port_work1"}
        #proxy_pass = {type = "tcp", address="www.upstream.cn:11131", is_proxy_protocol_hello = true}
        #proxy_pass = {type = "ssl", ssl_domain= "www.example.cn", address="www.upstream.cn:11132", is_proxy_protocol_hello = true}
        #proxy_pass = {type = "quic", ssl_domain= "www.example.cn", address="www.upstream.cn:11131", is_proxy_protocol_hello = true}
    #    [proxy_pass]
    #        type = "tunnel"
    #        tunnel_type = "tcp"
    #        tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
    #        address = "www.upstream.cn:11131"
    #        #heartbeat = {interval = 10, timeout = 10, fail = 3}
    #        #dynamic_domain = {interval = 10}
    #        is_proxy_protocol_hello = true
    
    #    [proxy_pass]
    #        type = "tunnel"
    #        tunnel_type = "ssl"
    #        tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
    #        ssl_domain= "www.example.cn"
    #        address = "www.upstream.cn:11132"
    #        #heartbeat = {interval = 10, timeout = 10, fail = 3}
    #        #dynamic_domain = {interval = 10}
    #        is_proxy_protocol_hello = true
    
    #     [proxy_pass]
    #         type = "tunnel"
    #         tunnel_type = "quic"
    #         tunnel = { max_stream_size = 5, min_stream_cache_size = 50, channel_size = 64}
    #         ssl_domain= "www.example.cn"
    #         address = "www.upstream.cn:11131"
    #         #heartbeat = {interval = 10, timeout = 10, fail = 3}
    #         #dynamic_domain = {interval = 10}
    #         is_proxy_protocol_hello = true
    
    
        [[listen]]
            type = "tcp"
            #绑定端口,支持配置多端口"10001-10009,10010,10011,10012,10100-10110"
            address = "0.0.0.0:11231"
        [[listen]]
            type = "ssl"
            #绑定端口,支持配置多端口"10001-10009,10010,10011,10012,10100-10110"
            address = "0.0.0.0:11232"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem", ssl_domain = "www.example.cn"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11231"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem", ssl_domain = "www.example.cn"}
    
    #include ./port_server.conf }

#include ./port.conf }

#include ./domain.conf {
[_domain]
    [[listen]]
        type = "tcp"
        address = "0.0.0.0:11051"
    [[listen]]
        type = "ssl"
        address = "0.0.0.0:11052"
        ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    [[listen]]
        type = "quic"
        address = "0.0.0.0:11051"
        ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}

    [[access]]
        access_log = true
        access_log_file = "./logs/access.log"
        access_format = "[${local_time}] ${total_read_size} ${total_write_size} ${write_max_block_time_ms} ${buffer_cache} ${upstream_dispatch} ${is_proxy_protocol_hello} ${is_open_ebpf} ${local_protocol} -> ${upstream_protocol} ${request_id} ${client_addr} ${remote_addr} ${local_addr} ${upstream_addr} ${domain} ${upstream_host} ${status} ${status_str} ${is_timeout_exit} ${session_time} ${upstream_connect_time} ${client_bytes_received} ${upstream_bytes_sent} ${upstream_bytes_received} ${client_bytes_sent} ${upstream_curr_stream_size} ${upstream_max_stream_size} ${upstream_min_stream_cache_size} [${stream_work_times}]"
        access_log_stdout = false

    #include ./domain_server.conf {
    #include ../../proxy/conf/domain_server.conf {
    [[_server]]
        #domain类型 可以配置多个域名 并支持正则表达式匹配
        domain = "www.example.cn $$(...).i4.cn"
        proxy_pass = {type = "tcp", address = "127.0.0.1:19091"}
        #proxy_pass = {type = "ssl", ssl_domain = "www.example.cn", address = "127.0.0.1:19091"}
        #server = {server = "http_server", http = {http_server = "echo_server", body = "hello"}}
        #server = {server = "http_server", http = {http_server = "static_server", path = "C:/Users/yefy/Desktop/yefy/tools/nginx/nginx-1.18.0/html"}}
        #server = {server = "http_server", http = {http_server = "proxy_server", proxy_pass = {version = "http1.1"}}}
    
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11151"
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11152"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11151"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    
    [[_server]]
        #domain类型 可以配置多个域名 并支持正则表达式匹配
        domain = "www.example.cn $$(...).i4.cn"
        proxy_pass = {type = "upstream", ups_name="upstream_config_proxy1"}
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11153"
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11154"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11153"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    #include ../../proxy/conf/domain_server.conf }

    
    [[_server]]
        domain = "www.example.cn $$(...).example.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_work1"}
        #proxy_pass = {type = "ssl", ssl_domain= "www.example.cn", address = "www.upstream.cn:11152"}
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11251"
    
    [[_server]]
        domain = "www.example.cn $$(...).example.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_work2"}
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11252"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11251"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    
    [[_server]]
        domain = "www.i4.cn $$(...).i4.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_work1"}
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11251"
    
    [[_server]]
        domain = "www.i4.cn $$(...).i4.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_work2"}
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11252"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11251"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    #include ./domain_server.conf }

    #include ./domain_http_server.conf {
    #include ../../proxy/conf/domain_http_server.conf {
    [[_server]]
        #domain类型 可以配置多个域名 并支持正则表达式匹配
        domain = "www.example.cn $$(...).i4.cn"
        #proxy_pass = {type = "tcp", address = "127.0.0.1:19090"}
        #proxy_pass = {type = "ssl", ssl_domain = "www.example.cn", address = "127.0.0.1:19091"}
        proxy_pass = {type = "upstream", ups_name="upstream_config_proxy1"}
        #server = {server = "http_server", http = {http_server = "echo_server", body = "hello"}}
        #server = {server = "http_server", http = {http_server = "static_server", path = "C:/Users/yefy/Desktop/yefy/tools/nginx/nginx-1.18.0/html"}}
        server = {server = "http_server", http = {http_server = "proxy_server", proxy_pass = {version = "http1.1"}}}
    
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11161"
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11162"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11161"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    
    [[_server]]
        #domain类型 可以配置多个域名 并支持正则表达式匹配
        domain = "www.example.cn $$(...).i4.cn"
        proxy_pass = {type = "upstream", ups_name="upstream_config_proxy1"}
        server = {server = "http_server", http = {http_server = "proxy_server", proxy_pass = {version = "http1.1"}}}
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11163"
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11164"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11163"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    #include ../../proxy/conf/domain_http_server.conf }

    
    
    [[_server]]
        domain = "www.example.cn $$(...).example.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_http_work1"}
        #proxy_pass = {type = "ssl", ssl_domain= "www.example.cn", address = "www.upstream.cn:11152"}
        server = {server = "http_server", http = {http_server = "proxy_server", proxy_pass = {version = "http1.1"}}}
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11261"
    
    [[_server]]
        domain = "www.example.cn $$(...).example.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_http_work2"}
        server = {server = "http_server", http = {http_server = "proxy_server", proxy_pass = {version = "http1.1"}}}
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11262"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11261"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    
    [[_server]]
        domain = "www.i4.cn $$(...).i4.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_http_work2"}
        server = {server = "http_server", http = {http_server = "proxy_server", proxy_pass = {version = "http1.1"}}}
        [[listen]]
            type = "tcp"
            address = "0.0.0.0:11261"
    
    [[_server]]
        domain = "www.i4.cn $$(...).i4.cn"
        is_proxy_protocol_hello = true
        proxy_pass = {type = "upstream", ups_name="upstream_config_domain_http_work2"}
        server = {server = "http_server", http = {http_server = "proxy_server", proxy_pass = {version = "http1.1"}}}
        [[listen]]
            type = "ssl"
            address = "0.0.0.0:11262"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
        [[listen]]
            type = "quic"
            address = "0.0.0.0:11261"
            ssl = {key = "./cert/www.example.cn.key.pem", cert = "./cert/www.example.cn.cert.pem"}
    
    #include ./domain_http_server.conf }

#include ./domain.conf }



